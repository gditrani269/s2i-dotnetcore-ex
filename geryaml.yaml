apiVersion: v1
kind: Template
labels:
  demo: mapit-template
metadata:
  annotations:
    description: MapIt Spring Boot Geo Spatial Application Template
    iconClass: icon-java
    tags: microservice,spring
  name: mapit-template
objects:
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: ${APP_NAME}
    labels:
      application: ${APP_NAME}
  spec:
    tags:
    - name: latest
- apiVersion: v1
  kind: BuildConfig
  metadata:
    name: ${APP_NAME}
    labels:
      application: ${APP_NAME}
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: ${APP_NAME}:latest
    source:
      contextDir: app
      git:
        ref: ${GIT_REF}
        uri: ${GIT_URI}
      type: Git
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: dotnet:2.2
          namespace: openshift
      type: Source
    triggers:
    - type: ConfigChange
    - imageChange: {}
      type: ImageChange
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: ${APP_NAME}
    labels:
      application: ${APP_NAME}
  spec:
    replicas: 1
    selector:
      deploymentconfig: ${APP_NAME}
    strategy:
      resources: {}
      type: Recreate
    template:
      metadata:
        labels:
          application: ${APP_NAME}
          deploymentconfig: ${APP_NAME}
        name: ${APP_NAME}
      spec:
        containers:
        - image: image-registry.openshift-image-registry.svc:5000/mapit/gerymal
        name: ${APP_NAME}
        ports:
        - containerPort: 8080
          protocol: TCP
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 75
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${APP_NAME}
        from:
          kind: ImageStreamTag
          name: ${APP_NAME}:latest
      type: ImageChange
    - type: ConfigChange
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: ${APP_NAME}
      application: ${APP_NAME}
    name: ${APP_NAME}
  spec:
    ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      deploymentconfig: ${APP_NAME}
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      application: ${APP_NAME}
    name: ${APP_NAME}
  spec:
    to:
      kind: Service
      name: ${APP_NAME}
      weight: 100
parameters:
- displayName: Application name
  name: APP_NAME
  required: true
  value: gerymal
- description: Git source URI for application
  displayName: Git source repository
  name: GIT_URI
  required: true
  value: https://github.com/gditrani269/s2i-dotnetcore-ex.git
- displayName: Git branch/tag reference
  name: GIT_REF
  required: true
  value: master
